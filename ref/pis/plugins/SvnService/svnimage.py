#----------------------------------------------------------------------
# This file was generated by img2py.py
#
from wx import ImageFromStream, BitmapFromImage, EmptyIcon
import cStringIO, zlib


def getUpdateData():
    return zlib.decompress(
"x\xda\x01#\x01\xdc\xfe\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00 \x00\
\x00\x00 \x08\x06\x00\x00\x00szz\xf4\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\
\x08d\x88\x00\x00\x00\xdaIDATX\x85\xed\x96\xc1\x12\x83 \x0cD\x17\xedwK\xf0\
\xbfizJ'\x15\x94\x08t\xa8\x1d\xdf\x11\xc1\xddM\x00un\x9a1\x92i\xa8\xfam\xe06\
\x00\xe0Q\xbb\x90\x97\xc8\x96yn\x9d\xdd\xd1\xf3\xe1\x15pg\xef\x01k\xf2Dh\xa7\
\x12U- \xe3\x98\x85\xa4\x02\xbcD\x06\x01n\xfat,\xc9\xb7B\xe4\x01\n\xa9\x89R\
\xef\x85|\x05\x08\xc0\x9a\x1f\x06\x00\xef\x01y{N\xfc\x0c\xc5\x16\xe8\xe4\xe4\
\xf3b\x04{\xe2-\xa6S\xa0\xc5\x01\x95:\xd4'\x17v+\xa0w\xbb\x16\x7f\x13\xda\
\x92\x0b\xe5\nl\xc5;\xa4\xd6\x1c\xef\x81\x8c\xb8\xd0\x9a\\\x18~\x13\xda\r\
\x84\xf2\x94\x1a\x8e[\xf0%Q\xcd\x85Z\xf0k\x06x\x89\xcc\xcf\xba/c\x17\x03\x00\
\xba\\\x08\xcd-h\xadD\x9f=@\xf5KO\xff\x11\xf5\xe6\xba\xa7\xe06\xf07\x06^\xe3\
\xb3<\xd2\xde0(\xd2\x00\x00\x00\x00IEND\xaeB`\x82\xd7\xa5v\xa6" )

def getUpdateBitmap():
    return BitmapFromImage(getUpdateImage().Scale(16, 16))

def getUpdateImage():
    stream = cStringIO.StringIO(getUpdateData())
    return ImageFromStream(stream)

def getUpdateIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getUpdateBitmap())
    return icon


def getCommitData():
    return zlib.decompress(
"x\xda\xeb\x0c\xf0s\xe7\xe5\x92\xe2b``\xe0\xf5\xf4p\t\x02\xd2\n \xcc\xc1\x06\
$\x8b\xab\xaa\xbe\x00)\x96b'\xcf\x10\x0e \xa8\xe1H\xe9\x00\xf2\xefz\xba8\x86\
D\xb4\xbe\r\x8f\xe5o2\xe0\xd9cT\xbf]\xfb\xf7}6\xf9\x92\xa6\xc9\xa7J\x9d\xbf)\
L\x9f\xc0\xc0\xf8\xaey\x1b\xcfD\xc5\x05\xeam\xeb\xde,o\x08fh\xe0\xae~X\xb2\
\xd7W\xd7eR\xd3\x9a\xb9\xcf\x85/\x88UI\x970\x19\xb18\xce\xea\x8f\x16.\xe46\
\x10\x14\xff\xfd\x98\x91\xe9\xde\x9c\xe3\xfa\xe2\x93V\xbcb:Z\xa7\xfa\xf0\x1d\
\x13\xeb\x82\xecs\xda\x8f\xca9\rNjwf2z?\x97\xcfPa?!u\xe2\xc9\xc7\x97q\xc7\
\x8foc?\xc3r\xed\x97M\xbfQo\xc5\xce\xedj2\xd6\xea\xafv5\x14\xae\xbf\xb3\xf9\
\x85\xd2\x15\x0ba\xed\x9c\xe7\x92\x95Ey\xaa\x07\xaf:8\xbe;t\x8c7\x86\x89\xef\
\xb9\xea\xa9|\x0f\xce]lW\x0e\xbfr\xf8\xce\xeaY\xce\xf8\xa7\xea\xc0\xcfw\x91%\
\xfe\x07D\x144O\xac\x8f\tf\xeak\x9a\xf3\xbf\xad^\xff\x01_m\x86\xd9\x8f\x1b?{\
\xe5\x81\x1ee\xf0t\xf5sY\xe7\x94\xd0\x04\x00\x07\x87u@" )

def getCommitBitmap():
    return BitmapFromImage(getCommitImage().Scale(16, 16))

def getCommitImage():
    stream = cStringIO.StringIO(getCommitData())
    return ImageFromStream(stream)

def getCommitIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getCommitBitmap())
    return icon
    
def getCheckoutData():
    return zlib.decompress(
"x\xda\x01Z\x01\xa5\xfe\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00 \x00\
\x00\x00 \x08\x06\x00\x00\x00szz\xf4\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\
\x08d\x88\x00\x00\x01\x11IDATX\x85\xedWA\x12\xc2 \x0c\\\xd4\x7f\xc1\xc7l@?V\
\x1e\xe6\xe0\x01Rm4J\xb13T\xc7\xbd\xd0N\x12\x9a\xdd&\xa15f\xb7\xc7'\xa0\xe1\
\x98\xf2\x95\xaf\x8c\xc8~\xe1t6\x00\xb0\xfb\xe8\xe9+\xe0\xd0\x1aH\xc3%\x01\
\x00\x91\x17\x96,H\x8c\x11\x00`\xad\x13v?s\xec\xae\xc0?\x81\xe6\x1a\xd0a\x00\
\x00\xd6>\xb7\x860\xbf\xff\x1d\x05b\x1c\x01\x00\xb6P\xd7\xba\x80(\xaf\xacDw\
\x05\xfe\t\x98\xa5gA*\x13\xf0\x1dF7\x02x6\t36S\x03\xd5]P\xcb\x9c\xe1F\x97\
\xe3\x94y\xc0\xd8\x8e\x02\xcc\xd0\x9c\xf6\xe6\xdeabN\xca\x0eb\xb2%\x9a\x9f\
\x86\x80{\x99\xc0v\x14\x90\xa8e\x9e\x8a\x9d'\xe1\x8dy\x1d\xb6\xa7\x80Z\xed\
\xe2]{a\xe6~g%j\xd1]\x81i\x12>0\xe7w/\x98s\x97\x90\xf0'\xadV\x04\xbe\xe8{ \
\xa8\x96\x02/\xd66tW@\xaf\x01-@L\xca\xe5\x7fF\x19\xa1\xec\xf3}\nL\x81B\x89Vt\
W\xa09\x814\\\xd2R\xd5VM`-\\\x01I\x04c\xac)\xa6\xd2\x12\x00\x00\x00\x00IEND\
\xaeB`\x82\xaf\xad\x8b\x95" )

def getCheckoutBitmap():
    return BitmapFromImage(getCheckoutImage().Scale(16, 16))

def getCheckoutImage():
    stream = cStringIO.StringIO(getCheckoutData())
    return ImageFromStream(stream)

def getCheckoutIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getCheckoutBitmap())
    return icon    



def getCleanupData():
    return zlib.decompress(
'x\xda\x013\x01\xcc\xfe\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00 \x00\
\x00\x00 \x08\x06\x00\x00\x00szz\xf4\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\
\x08d\x88\x00\x00\x00\xeaIDATX\x85\xed\x97Q\x0e\x83 \x10Dg\xd5\x83q\xb1\xcab\
/\xe6\xc5\x1a\xfa!\x93\xb6D"\x18\xd3%i\xdf\x0fD\xd8\xe0<\x11\xa3\xc80\xc2\
\x92\xc1t\xf5\xff\r\x00\x10@\xe3\xee\x88\x1e\x14.wiY(\xce\xb7\x8fuXon`bR\xcd\
\x06\x9cs\xbb\x05n]\x9b\x16\xc8\x93\xe7\xd7\xcd\r\x9c\xde\x03Z\x98\x10\x96Q\
\x80r\xf2\xbc\xcc\xdc\xc0\xa4\xbau\xbc\xf7U\x05!H\x9a\xbf?\xaeZ\x97\\\x86n\
\xde\x82J\x8e\x92\x93\x185\xcd\xdfZ\x1a&LN\xfa5\xc0\xc4\xa4r\x8b\xbc\xcdW\
\x00\x80&\x05yrbn@T\xf3s@\x01\xb4\'.\x11Bj\xd3\xf9\x90cn`\n\xe9\xab\xe4\xe7G\
\x04\xaeK^\x8b\xbd\x01v^\xcf\xe8\xbb&\xfa1@\xae2q\xb4\xfbI\x7f\x06\xc8Y\x13\
\xb5\xc9I\xbf\x06H\xad\x89\xd6\xe4\xa4\x7f\x03$7Q\x1eo\xc3\xdc\x80\xfc\xfc\
\xdf\xf1\x13n\x9fS\x0f\xa5\xf3z4\x00\x00\x00\x00IEND\xaeB`\x82\x86\xad\x7f\
\xfe' )

def getCleanupBitmap():
    return BitmapFromImage(getCleanupImage().Scale(16, 16))

def getCleanupImage():
    stream = cStringIO.StringIO(getCleanupData())
    return ImageFromStream(stream)

def getCleanupIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getCleanupBitmap())
    return icon
    

def getSettingData():
    return zlib.decompress(
'x\xda\x01\xfd\x01\x02\xfe\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00 \
\x00\x00\x00 \x08\x06\x00\x00\x00szz\xf4\x00\x00\x00\x04sBIT\x08\x08\x08\x08\
|\x08d\x88\x00\x00\x01\xb4IDATX\x85\xadW]z\xc4 \x08\xc4t\x0f\xe6\xc5\xf2}\
\xb4\xb9\x98\x17k\xecKI\x10\x19\xd1\xdd\xcc\xc3\xfe\x18\x1cF\x044)m_4B=\xf7\
\xea\x8d\xa7\xedH3v\xc8^\xf0\x1az\'"f\xf3\xff\xfax\xc6>\xd9\x08\xe8\x95\x08Y\
\xce\x99\x88\x88J)cR\x06\xc3j\xd0F"\x14 \xce\x05"\xe2r\xc8\xd7\xcf\x0bV\xb0\
\x16a\x05l\x8e\xe0N\xb5F\xce\xf9\x16e\x9c7\xcf\xa8\x15\x8f\xf8\xa0\x80\x08B\
\xce\xe6?\x02\x12\xd0m\x81\xa0\x9e{\xf5\xb6`\x15\xa5\x94a\x0e\xbc\x1d\x81\
\xa7\xd0\x95aT\xcfOc9\t\xdf\xc1\x88+\x11q\xb7b=a\x94\x03MI\x02[\xaf\x14\x89\
\xee\\\xb8\x04x*#B\x0f\xc3\xbeAw\xd5\xa4\x1f%\xe0\x1d\xe7\xac\xd9d\x8c\xd7D\
\x10;9`\x9b\x89\xeb\x9c{\xe7\x9a8\xda\x1a=\xfd\x85\x8c\x10PK\xad\xe7^\xa55;\
\xda`T\xa6\xfa@s\x08\x85\n\xdb9\x11\xa6\x04,uC\x9e7m\x04\x94R\xa6U\x7f\n\xed\
\xa7\xeb\x84\xf2\xd0[5\xd3\xbd@\xb7c2>\x9c\xd0\xe2\xfaF\xc4m\x145\xd1\xf0B2\
\xe1\x9c\xcd4ft!\x01d\xb3[\x14\x89f&\xfa\x96F\xf4\xd1\x8dh\xe0\x189\x17H\x19\
\x87U $\x92\xa4\xa8"\xa6\xf7|;\x92\xee!\xe1\xadX\x93\x89\x93\x9c3LV\xd71cn,\
\xe0\x7fR\xd4\x96g\xf3\x02\xbd\x17\xf8[\xc0\x98\xe8\xe9^\x01\x05\x88\x86U\
\x87r\x98\xd9\xc8\xd5s\xaf\xf5\xfc\xedz\x87\xbb\x05\xec\r\xda\xe7\xc6h\xee\
\x06\xc5Dt\xcc\t\xd0|+QX\x8d\x18LB}\xe6\xb3\x1dG\xf6\xca\x18\x98\xc5\x02$[\
\xa5#J>X\xc2\xd9\xb7ct\x7f\x80\x02z\x86\xe6+\xc6\xa2\xfd\x1f,}\xf7\xbe\xff\
\xb2GD\x00\x00\x00\x00IEND\xaeB`\x82Fw\xe0\xa7' )

def getSettingBitmap():
    return BitmapFromImage(getSettingImage().Scale(16, 16))

def getSettingImage():
    stream = cStringIO.StringIO(getSettingData())
    return ImageFromStream(stream)

def getSettingIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getSettingBitmap())
    return icon
        
from wx.lib.embeddedimage import PyEmbeddedImage

SvnTab = PyEmbeddedImage(
    "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABHNCSVQICAgIfAhkiAAAAsFJ"
    "REFUWIXN109sVFUUx/HPa1ppMBARNKVSWtqGP5FIAooCNU00ooYYCbAghsTEuCVs3Lpg4c6F"
    "rA0RtxobiAsSWBijgFDUIq0Wi51CKR1KW5GmpmXaeSzuTCftdIqVxZuzecm7595z3vf87pkz"
    "0YPJCUlaRaLRUZnNZme9OHOpP4a29qGSm/a99CzYvb0uetwEEicQ/Ts+Bj5tuxbD2NAw2PPa"
    "FvB849O6ekdBqj8NLvzSB9Y01YGP9m343yQSJzCjgd7BQOLldStBT98gyE5Nutx1C9wdCT4N"
    "davB713XQdszT8bw5fnhkoHe37kK7N1VO4tW+RDI25KqStBYX4OggYrKJShoYPDuJFhR3wzO"
    "nPsLHNmzFWzbGCj+3D2iJ3UbfHX6KriYGo/hk/eaolwC0yA7OZZL4amiLLtv/A2OfTc+Z2Vq"
    "1p6d6XsgzoQEf+y4IT10HzQ3PAc6fv0jxDvYgHIoQZwrQRRPz+tw+POr7t0cAEcPbAc7NgfE"
    "FzpHQFdPEOnxtg7Q9MJ6cKhl/UwJ+tOBSsWqWpCPmzyBvAbi7NS8Dlf67ntnU2i9V7r7g28m"
    "/ICdvZgCA+l/wKbmteDST0Fwh1pqiw98EHzzccuBQO4altAAVD8RrubmDWtQ0EBUVY2CBlID"
    "oc5RTX3piFO5W1dGGsgRyJYgMDGKZYs7dWJ0gcVMCFdGBMKXt25dB861/4lCK46m578dC9mC"
    "e/Kdt+xuwVsv1kSwdOmyGI5/fTp4xFWLPzXOlFyKcv2m/DSQt5aN1VF4vgre/PiHeNGnZosJ"
    "pIfDsPL2K43BJRe3aB6Ya48jws++ODnzbveOMCvs37UiCgmUSwniRxDY39rs27OdKLTiUnb7"
    "ztDMHvjg9dVF0/LceIkTiHp7Oh/p9E17JoYTp75f0O/d1jCwfPjG8v/8PyF5Atev/ZZoAokT"
    "eAizZRYdBGlLYgAAAABJRU5ErkJggg==")
getSvnTabData = SvnTab.GetData
getSvnTabImage = SvnTab.GetImage
getSvnTabBitmap = SvnTab.GetBitmap
getSvnTabIcon = SvnTab.GetIcon
    
def getSvnNoChangeData():
    return zlib.decompress(
'x\xda\x01f\x01\x99\xfe\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00 \x00\
\x00\x00 \x08\x06\x00\x00\x00szz\xf4\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\
\x08d\x88\x00\x00\x01\x1dIDATX\x85\xed\x97Qn\x84 \x10\x86\xff\x01\xef\x05m\
\xcf\xa5\x8c\xdbs\xb5\xc5{\xad;}P,k\xc0\x9a\x80\xd9\x17&11\x98\xf0}\xc3\x8c\
\xa0DJ\xe3\x95\xa1^Jo\x02M\xa0\t4\x81&\xd0\x04\x9a\x00\x80.5\xe8\x86^\x00\
\x06Gc\x0c\xc6x\xfb\xa4\xda\x02\x14\x7f\x90\x04\xf0>r"\x8f\xf9.JwER[\tr\xf0\
\x94\x80\x1bzy\xccw)\x01\x87 R\xfa\x10\xbe\x17\x00\x00q\x82i\x9a\xf0\xf6\xfe\
Q\\\x12\x95F\xe4E\x02\xdcz[\xca^\x04~\xbe\xbfN-%\x83\xe1v\xf0e\xe5\xca\x82\
\x98\x91\x9d\x84\xd7\xcbZ\x0fcL2s\xba\xe9\xa22t\x01\x92\x13pn\xf1\xab\xb9\
\xecql=\xe0\x9c\xc0Z\xff\x84\xbf\x1a\x0e\xac\x1b\x91\xb5\xcb\xe4\xc6\x18\x00\
>\xba\xbf\x16\x0e\x00\x8a\xc1\xf0\x11\xc0\x18s\x1a\xce\'\xdf\x9e\xa3 R\x1a2\
\xcc\xc2\xf8\xab\xf7\xf6p<\xee\xaf\xd2\x06\x04\xd6\x1e\xe05\x971\x02\x8e\xff\
\xc0kd\x0fDg\x81\x1bz\t\x932\x8e\xb7&\x060V\xc8\xfeI`/\x91\x87\xd7=\x15)\xf5\
{\x9e\x12\xb9\xea8\xfe\x05\x02\xa3~\x06\xb8\x04\x87X\x00\x00\x00\x00IEND\xae\
B`\x82\x1e\xc5\x91\xea' )

def getSvnNoChangeBitmap():
    return BitmapFromImage(getSvnNoChangeImage().Scale(16, 16))

def getSvnNoChangeImage():
    stream = cStringIO.StringIO(getSvnNoChangeData())
    return ImageFromStream(stream)

def getSvnNoChangeIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getSvnNoChangeBitmap())
    return icon      
    

def getSvnModifiedData():
    return zlib.decompress(
'x\xda\x01N\x01\xb1\xfe\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00 \x00\
\x00\x00 \x08\x06\x00\x00\x00szz\xf4\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\
\x08d\x88\x00\x00\x01\x05IDATX\x85\xed\x96]\x0e\xc2 \x10\x84\x87\xa5\xf7\x92\
\xdasi\x17=\x97\xba=\x98\xc5\x17\xc1\xb6Bl\x04\xed\x0b\x93\x904\xfc\x84\x8f\
\xd9]\xa8R\xa4\xb1\xa5h\xd3\xdd+@\x05\xa8\x00\x15\xa0\x02T\x80\n\x00\xa0I\r\
\xdc\xae\x17\'"\x00\x00c\x0c\xda}\xa7~B\xa0H\xcf\x1a3;\x07D\x1b3\xbb\xe5\xfc\
\xec6\xfd#\x1a\xc7\xbb\x9b\xc2\rO\x07v\xc6\x84>\x0b\xc0\x92.\xe7\x86\'Y\x9eV\
D\x9c\x97\x88\xcc\x9d\x00\x8a9\x91\xb6}\xa9\x1f\x85#z\xfaU\x00\x85\\\xa0\xdb\
\xf5\xe2>\x85)\xa5\x9c\xb5^\xe4K\xed\x1b\xe5\xac\r\x00\xa9\x81a\x18\xc2\xb7\
\xb56{\xa3\xa4\x96\x19\x1e\xcd\x83H\xfc\xf9Y)\xb99\xd0\xb4\xfbN\x8d@4\x96\
\xfe\xe4\xfd\xb4o\xf2]\xe2v$\x00\xb0\xcc\xab&\xcf\x02\xb1r\xcdG\x85+8R\xe7^\
\xcc\x1cl\xe7\x82%\xa8H\xbf\x92\xd0\x92VkS\xad\xe4U<{\x0b\x00\xa0?\x1e\\\xd2\
^f\xd8\xd3\xb9\xe8\xab\xf8\x06\xe0\xf5\xaf\xe7\xf8\x01\xec#\xef;\x80\xa5\xae\
\xdf\x00\x00\x00\x00IEND\xaeB`\x82\x98\xf8\x8e\x08' )

def getSvnModifiedBitmap():
    return BitmapFromImage(getSvnModifiedImage())

def getSvnModifiedImage():
    stream = cStringIO.StringIO(getSvnModifiedData())
    return ImageFromStream(stream)

def getSvnModifiedIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getSvnModifiedBitmap())
    return icon

def getRevertData():
    return zlib.decompress(
"x\xda\xeb\x0c\xf0s\xe7\xe5\x92\xe2b``\xe0\xf5\xf4p\t\x02\xd2\n \xcc\xc1\x06\
$\x8b\xab\xaa\xbe\x00)\x96b'\xcf\x10\x0e \xa8\xe1H\xe9\x00\xf2\xefz\xba8\x86\
D\xb4\xbe\r\x8d\xe5oV\xe0\xc9\xb9\xfbo\xdb\xba\x17\xf7\xe7\x95\xf1O\xe69\xc8\
\xfc'\x85?&i\xca\x94\xaa\xeb\xde\xdcg\xce6{-\xd2<\x15\xc7\x1a\xc2\xe8\xf2\
\xc5\x85\xf1m\x94\xaa\xd2\xa3\xba\x07\x116\xacS\xf2\x03\xef0\xba=o\xe8\xcbWM\
n\xe2*\xd2\xe6\xefh\x10\xae\x7fs f\xe5\x99\xec\xc8\xbb\xa2/'\xae\x0c5\x9f9\
\x9b\x99O\xa1H\xe6\x04\xfb\x9c&\x11\xf6\xef\xcc\xeeO\x17\xbb\xf0\x1f\xadVx\
\xc9\xd0T\xb6\xb6k\xb3Y\x9d>G\xea\xce\x82~\xe6&\xe7\xdd\xb2\x1f\xfeg\x9f\x8e\
/\xd9\xbf\xf9|C\xfd\x9c\xf7\r*\xe5:\x0c\xe7\x1b\xd7n\xb0}\xf8\xf9~\x99\xf8\
\x8f#;-t\x1c\x96\x07\xc6/\xa8\xaa\xaf\xedd\x10lO\xfbk\xdc\xe5\x1c,\xe0P\xb7\
\xfeA\x0c\x83E>\xd7\x93\xdf'\x8em\xb9\xbc,A\xbf\xeb>k\xa8\x83h\x00k\r\xc3ms\
\xfb\x87S\xed\x98\x8b\x81\x1ee\xf0t\xf5sY\xe7\x94\xd0\x04\x00\xc6\xacs\xac" )

def getRevertBitmap():
    return BitmapFromImage(getRevertImage().Scale(16, 16))

def getRevertImage():
    stream = cStringIO.StringIO(getRevertData())
    return ImageFromStream(stream)

def getRevertIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getRevertBitmap())
    return icon
    

def getAddData():
    return zlib.decompress(
"x\xda\xeb\x0c\xf0s\xe7\xe5\x92\xe2b``\xe0\xf5\xf4p\t\x02\xd2\n \xcc\xc1\x06\
$\x8b\xab\xaa\xbe\x00)\x96b'\xcf\x10\x0e \xa8\xe1H\xe9\x00\xf2wz\xba8\x86D\
\xb4\xbe\x9dz\x91\xf7\x90\x01\x8f\xcb\xf9\xc6\xbd\xb3\x8e.\xd0\xd39\x96\xf6\
\x94Y)\xd4!i\xf7F\x91\xc0\x9fK\xfe\x99\x14\xbd\x7f\xfa\xc8\xca\xe5e\xcbD/\
\xe7\xbb\xcc\n\x0cL\x0c\x07nFm\x88\xd3\xcf.\x9d\xc8\xe8U\xbe\xa9\xe6\xbc9\
\xe3\xb6\xe9_\x18\xcf|~\xfd\xf2B]\x83\xdfc\xa5I\xef\x9a\x9e\xcd\x14\xefH\xfd\
\xb9\xf7\\\x91\xff\x97\xef\x0eg\xff\xf0*x\xfe\x15\xb7)bcx\x92yi\xda\x8a+\xd3\
\x1d\xb2\xbf{\xad\x14\xfeqkg\xb3e\x82gB\xf6\x8b\x14\xbe\x08\xf5\x85\x8b\x0b'\
\xcea\x08\xbf\x97\xdd\x16\xb0\xb6L\xb9\x90\xaff\x95\xa58\xc3\x85\xdc'\xb1\
\x1b\x9c\xd9\x99\x13\xaa;w\xb2\xef)\xdd\xa0\xcc\xd1\xc0\xf0\xc3\xbdA],Cn\xf6\
^\x93\x19I@O0x\xba\xfa\xb9\xacsJh\x02\x00+mgs" )

def getAddBitmap():
    return BitmapFromImage(getAddImage().Scale(16, 16))

def getAddImage():
    stream = cStringIO.StringIO(getAddData())
    return ImageFromStream(stream)

def getAddIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getAddBitmap())
    return icon
    

def getRemoveData():
    return zlib.decompress(
'x\xda\x01`\x01\x9f\xfe\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00 \x00\
\x00\x00 \x08\x06\x00\x00\x00szz\xf4\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\
\x08d\x88\x00\x00\x01\x17IDATX\x85\xedV\xe1\xce\xc20\x08\xa4\x9d\x0f\xb6\x17\
S\x98>\xf7\x8a?\xbe.\x998\xe8Ug4\xf9FrYL;{\x1c\x07kJy\xa0oF\xfe\xea\xe9\x07\
\x81\x83@D\x80/g-e~\x00_\xce\xba7\x81\xe4\xb5a)\xf3\xe6a9\x0fiO\x02\xcd\x12L\
\x15K\xb4\x94`\xa3Z\xeb\xff]\x05\xd8\xbc\xccf\xddS\xc2\x1e\xdaT,\xe5!\x84\
\x12\xa9\x12\xa9T\xe8\n"\xa2\xcb>\xbbf\xd7]\xb4F1\xaa\x84\xcd|\x12\xf9{^o\
\xef)\x80(\xf1R\xe6\x15\xa7\x90\xdd:#t_\xcd\x1c\x0e\x94i\xaf\'PtOBT\tX\x00\
\xf4>\xe0\x99q\xb2\xbfQ\xf3\xd5\x80\x15`z\xee\x80\xcd}{{@V\xf5\x16S\xef\x87\
\xfao\xac#\x9eh*\x10e\x1e9\x9eEh\x1c\xc7\xb6\x00\xbd\xa3\xd8\xab1\x97Y\x99\
\xfa=\xe1\x7f\x8e\t\xab9\x12\xa1\x12\xad~\xb7@<c=\x11y\xc1U`\xab\xbe\xaf\xce\
\x80\xa83\xe09\xd0}\xe8\xea\xce\xc0"\xeeg\xf9\xa3w\xc2\xa5\xf6Q\xb7|L\x014~\
\xf7V|\x10\xf87\x04\xee\x10E\xe9-\x08_\x18L\x00\x00\x00\x00IEND\xaeB`\x82\
\x04!\x92\xaa' )

def getRemoveBitmap():
    return BitmapFromImage(getRemoveImage().Scale(16, 16))

def getRemoveImage():
    stream = cStringIO.StringIO(getRemoveData())
    return ImageFromStream(stream)

def getRemoveIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getRemoveBitmap())
    return icon        